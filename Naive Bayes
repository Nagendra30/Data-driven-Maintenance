# Install necessary libraries
!pip install scikit-learn

# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

# Load the dataset (replace with your actual dataset)
data = pd.read_csv("dataset.csv")

# Print the column names to identify the correct names
print("Column Names:", data.columns)

# Data preprocessing (if needed)
# Define X and y based on your dataset
X = data.drop(['timestamp', 'pSpintor::VAX_speed'], axis=1)
y = data['pSpintor::VAX_speed']

# Convert to binary classification (you may need to define specific thresholds)
y_binary = (y > y.mean()).astype(int)

# Initialize a list to store accuracy scores
accuracy_scores = []

# Perform 10 iterations
for i in range(10):
    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y_binary, test_size=0.2, random_state=i)

    # Train a Naive Bayes model
    model = GaussianNB()
    model.fit(X_train, y_train)

    # Make predictions
    y_pred = model.predict(X_test)

    # Calculate accuracy
    accuracy = accuracy_score(y_test, y_pred)
    accuracy_scores.append(accuracy)

    # Print accuracy for each iteration
    print(f"Iteration {i + 1} Accuracy: {accuracy}")

# Calculate the average accuracy across 10 iterations
average_accuracy = sum(accuracy_scores) / len(accuracy_scores)
print("Average Accuracy across 10 iterations:", average_accuracy)
